// Generated by CoffeeScript 1.7.1
(function() {
  var Canvas, distance, drawGrid, runExperiment;

  Canvas = {
    width: 1200,
    height: 800,
    gridPadding: 20,
    pointRadius: 5,
    radius: 320,
    getOrigin: function() {
      return {
        x: this.width / 2,
        y: this.height / 2
      };
    }
  };

  distance = function(x, y) {
    return Math.sqrt(x * x + y * y);
  };

  drawGrid = function() {
    var i, _i, _j, _ref, _ref1, _ref2, _ref3;
    fill(244);
    for (i = _i = 0, _ref = Canvas.height, _ref1 = Canvas.gridPadding; _ref1 > 0 ? _i <= _ref : _i >= _ref; i = _i += _ref1) {
      rect(0, i, Canvas.width, 1);
    }
    for (i = _j = 0, _ref2 = Canvas.width, _ref3 = Canvas.gridPadding; _ref3 > 0 ? _j <= _ref2 : _j >= _ref2; i = _j += _ref3) {
      rect(i, 0, 1, Canvas.height);
    }
    fill(200);
    rect(0, Canvas.getOrigin().y - 1, Canvas.width, 2);
    rect(Canvas.getOrigin().x - 1, 0, 2, Canvas.height);
    fill(204, 101, 192, 5);
    stroke(127, 63, 120);
    ellipse(Canvas.getOrigin().x, Canvas.getOrigin().y, 2 * Canvas.radius, 2 * Canvas.radius);
    return quad(Canvas.getOrigin().x - Canvas.radius, Canvas.getOrigin().y - Canvas.radius, Canvas.getOrigin().x + Canvas.radius, Canvas.getOrigin().y - Canvas.radius, Canvas.getOrigin().x + Canvas.radius, Canvas.getOrigin().y + Canvas.radius, Canvas.getOrigin().x - Canvas.radius, Canvas.getOrigin().y + Canvas.radius);
  };

  runExperiment = function() {
    var pointX, pointY, x, y;
    x = Math.random() * Canvas.radius;
    y = Math.random() * Canvas.radius;
    noStroke();
    if ((distance(x, y)) - Canvas.radius > 0) {
      fill(226, 122, 63);
    } else {
      fill(69, 178, 157);
    }
    pointX = Canvas.getOrigin().x + x;
    pointY = Canvas.getOrigin().y - y;
    return ellipse(pointX, pointY, Canvas.pointRadius, Canvas.pointRadius);
  };

  window.setup = function() {
    var i, _i, _results;
    createCanvas(Canvas.width + 1, Canvas.height + 1);
    noStroke();
    drawGrid();
    _results = [];
    for (i = _i = 0; _i <= 1000; i = ++_i) {
      _results.push(runExperiment());
    }
    return _results;
  };

}).call(this);
